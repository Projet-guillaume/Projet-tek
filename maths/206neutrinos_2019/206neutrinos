#!/usr/bin/env python3

import sys, math
from sys import stdin
from math import factorial, sqrt, exp, pi

def usage():
    print("USAGE\n    ./206neutrinos n a h sd\n")
    print("DESCRIPTION")
    print("    n\t    number of values")
    print("    a\t    arithmetic mean")
    print("    h\t    harmonic mean")
    print("    sd\t    standard deviation")

def gest_error():
    k = 1
    tab = []
    while (k < len(sys.argv)):
        tab.append(int(sys.argv[k]))
        if (tab[k-1] < 0):
            sys.exit(84)
        k += 1
    return tab

def value_input(input):
    if input == "END":
        exit(0)
    oper = float(input)
    if oper < 0:
        exit(84)
    return oper

def my_calcul(tab, ma):
    total = tab[1] * tab[0]
    temp = (tab[3] * tab[3] + tab[1] * tab[1]) * tab[0]
    tab[0] = tab[0] + 1
    tab[1] = (total + ma) / tab[0]
    tab[3] = sqrt(((temp + pow(ma, 2)) / tab[0]) - pow(tab[1], 2))
    tab[2] = tab[0] / ((1 / ma) + ((tab[0] - 1) / tab[2]))
    return tab

def print_numb(tab, mean_square):
    print ("    Number of values:\t%d" % tab[0])
    print ("    Standard deviation:\t%.2f" % tab[3])
    print ("    Arithmetic mean:\t%.2f" % tab[1])
    print ("    Root mean square:\t%.2f" % mean_square)
    print ("    Harmonic mean:\t%.2f\n" % tab[2])

def neutrinos(tab):
    while (True):
        input_value = input("Enter next value: ")
        ma = value_input(input_value)
        temp = (tab[3] * tab[3] + tab[1] * tab[1]) * tab[0]
        my_calcul(tab, ma)
        mean_square = sqrt((temp + pow(ma, 2)) / tab[0])
        print_numb(tab, mean_square)

if (len(sys.argv) == 5):
    arg = gest_error()
    if arg[2] == 0 or arg[2] < 0:
        exit(84)
    neutrinos(arg)
elif (len(sys.argv) == 2 and sys.argv[1] == "-h"):
    usage()
    exit(0)
else:
    exit(84)
exit(0)